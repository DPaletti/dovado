"""
This type stub file was generated by pyright.
"""

Lexer = None
class TokenStream(object):
    ...


class BufferedTokenStream(TokenStream):
    def __init__(self, tokenSource: Lexer) -> None:
        ...
    
    def mark(self):
        ...
    
    def release(self, marker: int):
        ...
    
    def reset(self):
        ...
    
    def seek(self, index: int):
        ...
    
    def get(self, index: int):
        ...
    
    def consume(self):
        ...
    
    def sync(self, i: int):
        ...
    
    def fetch(self, n: int):
        ...
    
    def getTokens(self, start: int, stop: int, types: set = ...):
        ...
    
    def LA(self, i: int):
        ...
    
    def LB(self, k: int):
        ...
    
    def LT(self, k: int):
        ...
    
    def adjustSeekIndex(self, i: int):
        ...
    
    def lazyInit(self):
        ...
    
    def setup(self):
        ...
    
    def setTokenSource(self, tokenSource: Lexer):
        ...
    
    def nextTokenOnChannel(self, i: int, channel: int):
        ...
    
    def previousTokenOnChannel(self, i: int, channel: int):
        ...
    
    def getHiddenTokensToRight(self, tokenIndex: int, channel: int = ...):
        ...
    
    def getHiddenTokensToLeft(self, tokenIndex: int, channel: int = ...):
        ...
    
    def filterForChannel(self, left: int, right: int, channel: int):
        ...
    
    def getSourceName(self):
        ...
    
    def getText(self, start: int = ..., stop: int = ...):
        ...
    
    def fill(self):
        ...
    


