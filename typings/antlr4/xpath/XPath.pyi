"""
This type stub file was generated by pyright.
"""

from antlr4 import Lexer
from antlr4.Parser import Parser
from antlr4.RuleContext import RuleContext
from antlr4.Token import Token
from antlr4.tree.Tree import ParseTree

def serializedATN():
    ...

class XPathLexer(Lexer):
    atn = ...
    decisionsToDFA = ...
    TOKEN_REF = ...
    RULE_REF = ...
    ANYWHERE = ...
    ROOT = ...
    WILDCARD = ...
    BANG = ...
    ID = ...
    STRING = ...
    modeNames = ...
    literalNames = ...
    symbolicNames = ...
    ruleNames = ...
    grammarFileName = ...
    def __init__(self, input=...) -> None:
        ...
    
    def action(self, localctx: RuleContext, ruleIndex: int, actionIndex: int):
        ...
    
    def ID_action(self, localctx: RuleContext, actionIndex: int):
        ...
    


class XPath(object):
    WILDCARD = ...
    NOT = ...
    def __init__(self, parser: Parser, path: str) -> None:
        ...
    
    def split(self, path: str):
        ...
    
    def getXPathElement(self, wordToken: Token, anywhere: bool):
        ...
    
    @staticmethod
    def findAll(tree: ParseTree, xpath: str, parser: Parser):
        ...
    
    def evaluate(self, t: ParseTree):
        ...
    


class XPathElement(object):
    def __init__(self, nodeName: str) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    


class XPathRuleAnywhereElement(XPathElement):
    def __init__(self, ruleName: str, ruleIndex: int) -> None:
        ...
    
    def evaluate(self, t: ParseTree):
        ...
    


class XPathRuleElement(XPathElement):
    def __init__(self, ruleName: str, ruleIndex: int) -> None:
        ...
    
    def evaluate(self, t: ParseTree):
        ...
    


class XPathTokenAnywhereElement(XPathElement):
    def __init__(self, ruleName: str, tokenType: int) -> None:
        ...
    
    def evaluate(self, t: ParseTree):
        ...
    


class XPathTokenElement(XPathElement):
    def __init__(self, ruleName: str, tokenType: int) -> None:
        ...
    
    def evaluate(self, t: ParseTree):
        ...
    


class XPathWildcardAnywhereElement(XPathElement):
    def __init__(self) -> None:
        ...
    
    def evaluate(self, t: ParseTree):
        ...
    


class XPathWildcardElement(XPathElement):
    def __init__(self) -> None:
        ...
    
    def evaluate(self, t: ParseTree):
        ...
    


