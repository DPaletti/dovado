"""
This type stub file was generated by pyright.
"""

from antlr4.InputStream import InputStream
from antlr4.ParserRuleContext import ParserRuleContext
from antlr4.Recognizer import Recognizer

Token = None
Lexer = None
Parser = None
TokenStream = None
ATNConfigSet = None
ParserRulecontext = None
PredicateTransition = None
BufferedTokenStream = None
class UnsupportedOperationException(Exception):
    def __init__(self, msg: str) -> None:
        ...
    


class IllegalStateException(Exception):
    def __init__(self, msg: str) -> None:
        ...
    


class CancellationException(IllegalStateException):
    def __init__(self, msg: str) -> None:
        ...
    


class RecognitionException(Exception):
    def __init__(self, message: str = ..., recognizer: Recognizer = ..., input: InputStream = ..., ctx: ParserRulecontext = ...) -> None:
        ...
    
    def getExpectedTokens(self):
        ...
    


class LexerNoViableAltException(RecognitionException):
    def __init__(self, lexer: Lexer, input: InputStream, startIndex: int, deadEndConfigs: ATNConfigSet) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    


class NoViableAltException(RecognitionException):
    def __init__(self, recognizer: Parser, input: TokenStream = ..., startToken: Token = ..., offendingToken: Token = ..., deadEndConfigs: ATNConfigSet = ..., ctx: ParserRuleContext = ...) -> None:
        ...
    


class InputMismatchException(RecognitionException):
    def __init__(self, recognizer: Parser) -> None:
        ...
    


class FailedPredicateException(RecognitionException):
    def __init__(self, recognizer: Parser, predicate: str = ..., message: str = ...) -> None:
        ...
    
    def formatMessage(self, predicate: str, message: str):
        ...
    


class ParseCancellationException(CancellationException):
    ...


