"""
This type stub file was generated by pyright.
"""

class Tree:
    '''
    Implementation of Nary-tree.
    The source code is modified based on https://github.com/lianemeth/forest/blob/master/forest/NaryTree.py

    Parameters
    ----------
    key: object
        key of the node
    num_branch: int
        how many branches in each node
    children: Iterable[Tree]
        reference of the children
    parent: Tree
        reference of the parent node
    Returns
    -------
        an N-ary tree.
    '''
    def __init__(self, key, num_branch, children=..., parent=...) -> None:
        ...
    
    @property
    def parent(self):
        ...
    
    def __getstate__(self):
        ...
    
    def __setstate__(self, state):
        ...
    
    def traversal(self, visit=..., *args, **kwargs):
        ...
    


def tree_based_non_dominated_sort(F):
    """
    Tree-based efficient non-dominated sorting (T-ENS).
    This algorithm is very efficient in many-objective optimization problems (MaOPs).
    Parameters
    ----------
    F: np.array
        objective values for each individual.
    Returns
    -------
        indices of the individuals in each front.
    References
    ----------
    X. Zhang, Y. Tian, R. Cheng, and Y. Jin,
    A decision variable clustering based evolutionary algorithm for large-scale many-objective optimization,
    IEEE Transactions on Evolutionary Computation, 2018, 22(1): 97-112.
    """
    ...

def update_tree(F, p, forest, k, left, obj_seq):
    ...

def check_tree(F, p, tree, obj_seq, add_pos):
    ...

