"""
This type stub file was generated by pyright.
"""

from pymoo.model.problem import Problem

class DTLZ(Problem):
    def __init__(self, n_var, n_obj, k=...) -> None:
        ...
    
    def g1(self, X_M):
        ...
    
    def g2(self, X_M):
        ...
    
    def obj_func(self, X_, g, alpha=...):
        ...
    


def generic_sphere(ref_dirs):
    ...

class DTLZ1(DTLZ):
    def __init__(self, n_var=..., n_obj=..., **kwargs) -> None:
        ...
    
    def obj_func(self, X_, g):
        ...
    


class DTLZ2(DTLZ):
    def __init__(self, n_var=..., n_obj=..., **kwargs) -> None:
        ...
    


class DTLZ3(DTLZ):
    def __init__(self, n_var=..., n_obj=..., **kwargs) -> None:
        ...
    


class DTLZ4(DTLZ):
    def __init__(self, n_var=..., n_obj=..., alpha=..., d=..., **kwargs) -> None:
        ...
    


class DTLZ5(DTLZ):
    def __init__(self, n_var=..., n_obj=..., **kwargs) -> None:
        ...
    


class DTLZ6(DTLZ):
    def __init__(self, n_var=..., n_obj=..., **kwargs) -> None:
        ...
    


class DTLZ7(DTLZ):
    def __init__(self, n_var=..., n_obj=..., **kwargs) -> None:
        ...
    


class InvertedDTLZ1(DTLZ1):
    ...


class ScaledProblem(Problem):
    def __init__(self, problem, scale_factor) -> None:
        ...
    
    @staticmethod
    def get_scale(n, scale_factor):
        ...
    


class ConvexProblem(Problem):
    def __init__(self, problem) -> None:
        ...
    
    def get_power(self, n):
        ...
    


class ScaledDTLZ1(ScaledProblem):
    def __init__(self, n_var=..., n_obj=..., scale_factor=..., **kwargs) -> None:
        ...
    


class ConvexDTLZ2(ConvexProblem):
    def __init__(self, n_var=..., n_obj=..., **kwargs) -> None:
        ...
    


class ConvexDTLZ4(ConvexProblem):
    def __init__(self, n_var=..., n_obj=..., **kwargs) -> None:
        ...
    


