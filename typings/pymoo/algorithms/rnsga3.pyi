"""
This type stub file was generated by pyright.
"""

from pymoo.algorithms.nsga3 import NSGA3
from pymoo.model.survival import Survival

class RNSGA3(NSGA3):
    def __init__(self, ref_points, pop_per_ref_point, mu=..., sampling=..., selection=..., crossover=..., mutation=..., eliminate_duplicates=..., n_offsprings=..., **kwargs) -> None:
        """

        Parameters
        ----------

        ref_points : {ref_points}
        pop_per_ref_point : int
            Size of the population used for each reference point.

        mu : float
            Defines the scaling of the reference lines used during survival selection. Increasing mu will result
            having solutions with a larger spread.

        Other Parameters
        -------

        n_offsprings : {n_offsprings}
        sampling : {sampling}
        selection : {selection}
        crossover : {crossover}
        mutation : {mutation}
        eliminate_duplicates : {eliminate_duplicates}

        """
        ...
    


class AspirationPointSurvival(Survival):
    def __init__(self, ref_points, aspiration_ref_dirs, mu=...) -> None:
        ...
    


def get_ref_dirs_from_points(ref_point, ref_dirs, mu=...):
    """
    This function takes user specified reference points, and creates smaller sets of equidistant
    Das-Dennis points around the projection of user points on the Das-Dennis hyperplane
    :param ref_point: List of user specified reference points
    :param n_obj: Number of objectives to consider
    :param mu: Shrinkage factor (0-1), Smaller = tigher convergence, Larger= larger convergence
    :return: Set of reference points
    """
    ...

def line_plane_intersection(l0, l1, p0, p_no, epsilon=...):
    """
    l0, l1: define the line
    p0, p_no: define the plane:
        p0 is a point on the plane (plane coordinate).
        p_no is a normal vector defining the plane direction;
             (does not need to be normalized).

    reference: https://en.wikipedia.org/wiki/Line%E2%80%93plane_intersection
    return a Vector or None (when the intersection can't be found).
    """
    ...

