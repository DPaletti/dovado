"""
This type stub file was generated by pyright.
"""

from collections import namedtuple
from collections.abc import Mapping

"""
Substantially copied from NumpyDoc 1.0pre.
"""
def dedent_lines(lines):
    """Deindent a list of lines maximally"""
    ...

def strip_blank_lines(line):
    """Remove leading and trailing blank lines from a list of lines"""
    ...

class Reader(object):
    """
    A line-based string reader.
    """
    def __init__(self, data) -> None:
        """
        Parameters
        ----------
        data : str
           String with lines separated by '\n'.
        """
        ...
    
    def __getitem__(self, n):
        ...
    
    def reset(self):
        ...
    
    def read(self):
        ...
    
    def seek_next_non_empty_line(self):
        ...
    
    def eof(self):
        ...
    
    def read_to_condition(self, condition_func):
        ...
    
    def read_to_next_empty_line(self):
        ...
    
    def read_to_next_unindented_line(self):
        ...
    
    def peek(self, n=...):
        ...
    
    def is_empty(self):
        ...
    


Parameter = namedtuple('Parameter', ['name', 'type', 'desc'])
class NumpyDocString(Mapping):
    """Parses a numpydoc string to an abstract representation

    Instances define a mapping from section title to structured data.
    """
    sections = ...
    def __init__(self, docstring) -> None:
        ...
    
    def __getitem__(self, key):
        ...
    
    def __setitem__(self, key, val):
        ...
    
    def __iter__(self):
        ...
    
    def __len__(self):
        ...
    
    _role = ...
    _funcbacktick = ...
    _funcplain = ...
    _funcname = ...
    _funcnamenext = ...
    _funcnamenext = ...
    _description = ...
    _func_rgx = ...
    _line_rgx = ...
    empty_description = ...
    def __str__(self, func_role=...) -> str:
        ...
    


class Docstring(object):
    """
    Docstring modification.

    Parameters
    ----------
    docstring : str
        The docstring to modify.
    """
    def __init__(self, docstring) -> None:
        ...
    
    def remove_parameters(self, parameters):
        """
        Parameters
        ----------
        parameters : str, list[str]
            The names of the parameters to remove.
        """
        ...
    
    def insert_parameters(self, after, parameters):
        """
        Parameters
        ----------
        after : {None, str}
            If None, inset the parameters before the first parameter in the
            docstring.
        parameters : Parameter, list[Parameter]
            A Parameter of a list of Parameters.
        """
        ...
    
    def replace_block(self, block_name, block):
        """
        Parameters
        ----------
        block_name : str
            Name of the block to replace, e.g., 'Summary'.
        block : object
            The replacement block. The structure of the replacement block must
            match how the block is stored by NumpyDocString.
        """
        ...
    
    def extract_parameters(self, parameters, indent=...):
        ...
    
    def __str__(self) -> str:
        ...
    


def remove_parameters(docstring, parameters):
    """
    Parameters
    ----------
    docstring : str
        The docstring to modify.
    parameters : str, list[str]
        The names of the parameters to remove.

    Returns
    -------
    str
        The modified docstring.
    """
    ...

